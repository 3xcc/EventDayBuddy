"""add_event_id_to_booking_groups

Revision ID: [generated_id]
Revises: [previous_migration_id]
Create Date: 2024-01-01 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '[generated_id]'
down_revision = '[previous_migration_id]'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add event_id column to booking_groups (nullable first, then we'll update)
    op.add_column('booking_groups', sa.Column('event_id', sa.String(), nullable=True))
    
    # Set a default value for existing records (use 'Master' as default)
    op.execute("UPDATE booking_groups SET event_id = 'Master' WHERE event_id IS NULL")
    
    # Now make it non-nullable
    op.alter_column('booking_groups', 'event_id', nullable=False)
    
    # Create foreign key constraint
    op.create_foreign_key(
        'fk_booking_groups_event_id', 
        'booking_groups', 
        'events', 
        ['event_id'], 
        ['name'],
        ondelete='CASCADE'
    )
    
    # Create index
    op.create_index('ix_booking_groups_event_id', 'booking_groups', ['event_id'])
    
    # Create unique constraint for event_id + phone
    op.create_unique_constraint('uix_event_phone', 'booking_groups', ['event_id', 'phone'])
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Drop unique constraint
    op.drop_constraint('uix_event_phone', 'booking_groups', type_='unique')
    
    # Drop index
    op.drop_index('ix_booking_groups_event_id', table_name='booking_groups')
    
    # Drop foreign key
    op.drop_constraint('fk_booking_groups_event_id', 'booking_groups', type_='foreignkey')
    
    # Drop event_id column
    op.drop_column('booking_groups', 'event_id')
    
    # ### end Alembic commands ###