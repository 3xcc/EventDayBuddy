"""baseline schema

Revision ID: b59515f5d30b
Revises: 
Create Date: 2025-09-24 23:28:36.254262

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b59515f5d30b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('boats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('boat_number', sa.Integer(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_boats_boat_number'), 'boats', ['boat_number'], unique=True)
    op.create_index(op.f('ix_boats_id'), 'boats', ['id'], unique=False)
    op.create_index(op.f('ix_boats_status'), 'boats', ['status'], unique=False)
    op.create_table('booking_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_booking_groups_id'), 'booking_groups', ['id'], unique=False)
    op.create_table('config',
    sa.Column('key', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_id'), 'events', ['id'], unique=False)
    op.create_index(op.f('ix_events_name'), 'events', ['name'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('admin', 'checkin_staff', 'booking_staff', 'viewer', name='user_role'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chat_id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('boarding_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('boat_number', sa.Integer(), nullable=False),
    sa.Column('event_name', sa.String(), nullable=True),
    sa.Column('started_by', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['boat_number'], ['boats.boat_number'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['started_by'], ['users.chat_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_boarding_sessions_boat_number'), 'boarding_sessions', ['boat_number'], unique=False)
    op.create_index(op.f('ix_boarding_sessions_id'), 'boarding_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_boarding_sessions_is_active'), 'boarding_sessions', ['is_active'], unique=False)
    op.create_index(op.f('ix_boarding_sessions_started_by'), 'boarding_sessions', ['started_by'], unique=False)
    op.create_table('bookings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('ticket_ref', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id_number', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('male_dep', sa.String(), nullable=True),
    sa.Column('resort_dep', sa.String(), nullable=True),
    sa.Column('paid_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('transfer_ref', sa.String(), nullable=True),
    sa.Column('ticket_type', sa.String(), nullable=True),
    sa.Column('arrival_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('departure_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('arrival_boat_boarded', sa.Integer(), nullable=True),
    sa.Column('departure_boat_boarded', sa.Integer(), nullable=True),
    sa.Column('checkin_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('booked', 'checked_in', 'boarded', 'missed', 'transferred', name='booking_status'), nullable=True),
    sa.Column('id_doc_url', sa.String(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['arrival_boat_boarded'], ['boats.boat_number'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['departure_boat_boarded'], ['boats.boat_number'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['group_id'], ['booking_groups.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bookings_group_id'), 'bookings', ['group_id'], unique=False)
    op.create_index(op.f('ix_bookings_id'), 'bookings', ['id'], unique=False)
    op.create_index(op.f('ix_bookings_id_number'), 'bookings', ['id_number'], unique=False)
    op.create_index(op.f('ix_bookings_phone'), 'bookings', ['phone'], unique=False)
    op.create_index(op.f('ix_bookings_status'), 'bookings', ['status'], unique=False)
    op.create_index(op.f('ix_bookings_ticket_ref'), 'bookings', ['ticket_ref'], unique=True)
    op.create_table('checkin_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('boat_number', sa.Integer(), nullable=False),
    sa.Column('confirmed_by', sa.String(), nullable=False),
    sa.Column('method', sa.String(), nullable=False),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['boat_number'], ['boats.boat_number'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['confirmed_by'], ['users.chat_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_checkin_logs_boat_number'), 'checkin_logs', ['boat_number'], unique=False)
    op.create_index(op.f('ix_checkin_logs_booking_id'), 'checkin_logs', ['booking_id'], unique=False)
    op.create_index(op.f('ix_checkin_logs_confirmed_by'), 'checkin_logs', ['confirmed_by'], unique=False)
    op.create_index(op.f('ix_checkin_logs_id'), 'checkin_logs', ['id'], unique=False)
    op.create_table('ticket_transfer_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('from_booking_id', sa.Integer(), nullable=False),
    sa.Column('to_booking_id', sa.Integer(), nullable=False),
    sa.Column('transferred_by', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['from_booking_id'], ['bookings.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['to_booking_id'], ['bookings.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ticket_transfer_logs_from_booking_id'), 'ticket_transfer_logs', ['from_booking_id'], unique=False)
    op.create_index(op.f('ix_ticket_transfer_logs_id'), 'ticket_transfer_logs', ['id'], unique=False)
    op.create_index(op.f('ix_ticket_transfer_logs_to_booking_id'), 'ticket_transfer_logs', ['to_booking_id'], unique=False)
    op.create_table('waitlist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('reassigned_boat', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['reassigned_boat'], ['boats.boat_number'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_waitlist_booking_id'), 'waitlist', ['booking_id'], unique=False)
    op.create_index(op.f('ix_waitlist_id'), 'waitlist', ['id'], unique=False)
    op.create_index(op.f('ix_waitlist_reassigned_boat'), 'waitlist', ['reassigned_boat'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_waitlist_reassigned_boat'), table_name='waitlist')
    op.drop_index(op.f('ix_waitlist_id'), table_name='waitlist')
    op.drop_index(op.f('ix_waitlist_booking_id'), table_name='waitlist')
    op.drop_table('waitlist')
    op.drop_index(op.f('ix_ticket_transfer_logs_to_booking_id'), table_name='ticket_transfer_logs')
    op.drop_index(op.f('ix_ticket_transfer_logs_id'), table_name='ticket_transfer_logs')
    op.drop_index(op.f('ix_ticket_transfer_logs_from_booking_id'), table_name='ticket_transfer_logs')
    op.drop_table('ticket_transfer_logs')
    op.drop_index(op.f('ix_checkin_logs_id'), table_name='checkin_logs')
    op.drop_index(op.f('ix_checkin_logs_confirmed_by'), table_name='checkin_logs')
    op.drop_index(op.f('ix_checkin_logs_booking_id'), table_name='checkin_logs')
    op.drop_index(op.f('ix_checkin_logs_boat_number'), table_name='checkin_logs')
    op.drop_table('checkin_logs')
    op.drop_index(op.f('ix_bookings_ticket_ref'), table_name='bookings')
    op.drop_index(op.f('ix_bookings_status'), table_name='bookings')
    op.drop_index(op.f('ix_bookings_phone'), table_name='bookings')
    op.drop_index(op.f('ix_bookings_id_number'), table_name='bookings')
    op.drop_index(op.f('ix_bookings_id'), table_name='bookings')
    op.drop_index(op.f('ix_bookings_group_id'), table_name='bookings')
    op.drop_table('bookings')
    op.drop_index(op.f('ix_boarding_sessions_started_by'), table_name='boarding_sessions')
    op.drop_index(op.f('ix_boarding_sessions_is_active'), table_name='boarding_sessions')
    op.drop_index(op.f('ix_boarding_sessions_id'), table_name='boarding_sessions')
    op.drop_index(op.f('ix_boarding_sessions_boat_number'), table_name='boarding_sessions')
    op.drop_table('boarding_sessions')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_events_name'), table_name='events')
    op.drop_index(op.f('ix_events_id'), table_name='events')
    op.drop_table('events')
    op.drop_table('config')
    op.drop_index(op.f('ix_booking_groups_id'), table_name='booking_groups')
    op.drop_table('booking_groups')
    op.drop_index(op.f('ix_boats_status'), table_name='boats')
    op.drop_index(op.f('ix_boats_id'), table_name='boats')
    op.drop_index(op.f('ix_boats_boat_number'), table_name='boats')
    op.drop_table('boats')
    # ### end Alembic commands ###
